{"remainingRequest":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\src\\components\\NavBar.vue?vue&type=template&id=4295d220&scoped=true&","dependencies":[{"path":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\src\\components\\NavBar.vue","mtime":1621016402460},{"path":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sarah\\Documents\\ESI RPI\\allerFood-front-copie\\front_allerfood\\front_project\\allerfood-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IGF0dHJzOiB7IGlkOiAiYXBwIiB9IH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LWFwcCIsCiAgICAgICAgeyBhdHRyczogeyBpZDogImluc3BpcmUiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYXBwLWJhciIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgcHJvbWluZW50OiAiIiwgYXBwOiAiIiwgY29sb3I6ICJ3aGl0ZSIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInYtYXBwLWJhci1uYXYtaWNvbiIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJ4LWxhcmdlIjogIiIsIGNvbG9yOiAiIzg1Q0I4NSIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICBfdm0uZHJhd2VyID0gIV92bS5kcmF3ZXIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtY29udGFpbmVyIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZmx1aWQ6ICIiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtbGF5b3V0IiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7ICJmaWxsLWhlaWdodCI6ICIiLCAianVzdGlmeS1jZW50ZXIiOiAiIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL2xvZ28xX3RyYW5zcGFyZW50LnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICJtYXgtaGVpZ2h0IjogIjEyMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIm1heC13aWR0aCI6ICIxMjAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygidi1zcGFjZXIiKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGljb246ICIiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgIngtbGFyZ2UiOiAiIiwgY29sb3I6ICIjQ0JCODg1IiB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5kcmF3ZXJfYWNjb3VudEljb24gPSAhX3ZtLmRyYXdlcl9hY2NvdW50SWNvbgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJtZGktYWNjb3VudC1jaXJjbGUgIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LW5hdmlnYXRpb24tZHJhd2VyIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7IGFic29sdXRlOiAiIiwgdGVtcG9yYXJ5OiAiIiB9LAogICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmRyYXdlciwKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgX3ZtLmRyYXdlciA9ICQkdgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJkcmF3ZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1saXN0IiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbmF2OiAiIiB9IH0sCiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLm1lbnVJdGVtcywgZnVuY3Rpb24oaXRlbSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgICAgICB7IGtleTogaXRlbS50aXRsZSwgYXR0cnM6IHsgdG86IGl0ZW0ucGF0aCB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJ2LWxpc3QtdGlsZS1hY3Rpb24iLAogICAgICAgICAgICAgICAgICAgICAgICBbX2MoInYtaWNvbiIsIFtfdm0uX3YoX3ZtLl9zKGl0ZW0uaWNvbikpXSldLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgX2MoInYtbGlzdC10aWxlLWNvbnRlbnQiLCBbX3ZtLl92KF92bS5fcyhpdGVtLnRpdGxlKSldKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtbmF2aWdhdGlvbi1kcmF3ZXIiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsgYWJzb2x1dGU6ICIiLCB0ZW1wb3Jhcnk6ICIiIH0sCiAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZHJhd2VyX2FjY291bnRJY29uLAogICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICBfdm0uZHJhd2VyX2FjY291bnRJY29uID0gJCR2CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImRyYXdlcl9hY2NvdW50SWNvbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWxpc3QiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyBuYXY6ICIiIH0gfSwKICAgICAgICAgICAgICAgIF92bS5fbChfdm0ucHJvZmlsTWVudUl0ZW1zLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgIHsga2V5OiBpdGVtLnRpdGxlLCBhdHRyczogeyB0bzogaXRlbS5wYXRoIH0gfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInYtbGlzdC10aWxlLWFjdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdihfdm0uX3MoaXRlbS5pY29uKSldKV0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygidi1saXN0LXRpbGUtY29udGVudCIsIFtfdm0uX3YoX3ZtLl9zKGl0ZW0udGl0bGUpKV0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}